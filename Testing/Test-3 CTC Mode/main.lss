
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000052e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000582  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000045  00000000  00000000  000005a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000016c  00000000  00000000  000005e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000105  00000000  00000000  00000753  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000001e5  00000000  00000000  00000858  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000050  00000000  00000000  00000a40  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000112  00000000  00000000  00000a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000084  00000000  00000000  00000ba2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00000c26  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 af 00 	call	0x15e	; 0x15e <main>
  78:	0c 94 95 02 	jmp	0x52a	; 0x52a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <timer1_init>:
  
// initialize timer, interrupt and variable
void timer1_init(void)
{
    // set up timer with prescaler = 8 and CTC mode
    TCCR1B |= (1 << WGM12)|(1 << CS11);
  80:	e1 e8       	ldi	r30, 0x81	; 129
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	80 81       	ld	r24, Z
  86:	8a 60       	ori	r24, 0x0A	; 10
  88:	80 83       	st	Z, r24
  
    // set up timer OC1A pin in toggle mode
    TCCR1A |= (1 << COM1A0);
  8a:	e0 e8       	ldi	r30, 0x80	; 128
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	80 64       	ori	r24, 0x40	; 64
  92:	80 83       	st	Z, r24
	
  
    // initialize counter
    TCNT1 = 0;
  94:	10 92 85 00 	sts	0x0085, r1
  98:	10 92 84 00 	sts	0x0084, r1
    // initialize compare value
    OCR1A = 0;
  9c:	10 92 89 00 	sts	0x0089, r1
  a0:	10 92 88 00 	sts	0x0088, r1
}
  a4:	08 95       	ret

000000a6 <ReadADC>:

uint16_t ReadADC(void)
{
   //Start Single conversion
   ADCSRA|=(1<<ADSC);
  a6:	80 91 7a 00 	lds	r24, 0x007A
  aa:	80 64       	ori	r24, 0x40	; 64
  ac:	80 93 7a 00 	sts	0x007A, r24

   //Wait for conversion to complete
   while(!(ADCSRA & (1<<ADIF)));
  b0:	80 91 7a 00 	lds	r24, 0x007A
  b4:	84 ff       	sbrs	r24, 4
  b6:	fc cf       	rjmp	.-8      	; 0xb0 <ReadADC+0xa>
   //Clear ADIF by writing one to it
   //Note you may be wondering why we have write one to clear it
   //This is standard way of clearing bits in io as said in datasheets.
   //The code writes '1' but it result in setting bit to '0' !!!

   ADCSRA|=(1<<ADIF);
  b8:	80 91 7a 00 	lds	r24, 0x007A
  bc:	80 61       	ori	r24, 0x10	; 16
  be:	80 93 7a 00 	sts	0x007A, r24

   return(ADC);
  c2:	20 91 78 00 	lds	r18, 0x0078
  c6:	30 91 79 00 	lds	r19, 0x0079
}
  ca:	c9 01       	movw	r24, r18
  cc:	08 95       	ret

000000ce <set_speed>:

void set_speed(float RPM){
  ce:	ef 92       	push	r14
  d0:	ff 92       	push	r15
  d2:	0f 93       	push	r16
  d4:	1f 93       	push	r17
  d6:	7b 01       	movw	r14, r22
  d8:	8c 01       	movw	r16, r24

if(RPM<=0.1)
  da:	2d ec       	ldi	r18, 0xCD	; 205
  dc:	3c ec       	ldi	r19, 0xCC	; 204
  de:	4c ec       	ldi	r20, 0xCC	; 204
  e0:	5d e3       	ldi	r21, 0x3D	; 61
  e2:	0e 94 47 01 	call	0x28e	; 0x28e <__cmpsf2>
  e6:	18 16       	cp	r1, r24
  e8:	34 f0       	brlt	.+12     	; 0xf6 <set_speed+0x28>
{
	TCCR1A &= ~(1 << COM1A0);
  ea:	80 91 80 00 	lds	r24, 0x0080
  ee:	8f 7b       	andi	r24, 0xBF	; 191
  f0:	80 93 80 00 	sts	0x0080, r24
  f4:	2f c0       	rjmp	.+94     	; 0x154 <set_speed+0x86>
}
else if( RPM >=585)
  f6:	c8 01       	movw	r24, r16
  f8:	b7 01       	movw	r22, r14
  fa:	20 e0       	ldi	r18, 0x00	; 0
  fc:	30 e4       	ldi	r19, 0x40	; 64
  fe:	42 e1       	ldi	r20, 0x12	; 18
 100:	54 e4       	ldi	r21, 0x44	; 68
 102:	0e 94 91 02 	call	0x522	; 0x522 <__gesf2>
 106:	88 23       	and	r24, r24
 108:	64 f0       	brlt	.+24     	; 0x122 <set_speed+0x54>
{
	TCCR1A |= (1 << COM1A0);
 10a:	80 91 80 00 	lds	r24, 0x0080
 10e:	80 64       	ori	r24, 0x40	; 64
 110:	80 93 80 00 	sts	0x0080, r24
	OCR1A=1;
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	90 93 89 00 	sts	0x0089, r25
 11c:	80 93 88 00 	sts	0x0088, r24
 120:	19 c0       	rjmp	.+50     	; 0x154 <set_speed+0x86>
}
else
{
	TCCR1A |= (1 << COM1A0);
 122:	80 91 80 00 	lds	r24, 0x0080
 126:	80 64       	ori	r24, 0x40	; 64
 128:	80 93 80 00 	sts	0x0080, r24
	OCR1A= (uint16_t)((1171.876/RPM)-1);
 12c:	68 e0       	ldi	r22, 0x08	; 8
 12e:	7c e7       	ldi	r23, 0x7C	; 124
 130:	82 e9       	ldi	r24, 0x92	; 146
 132:	94 e4       	ldi	r25, 0x44	; 68
 134:	a8 01       	movw	r20, r16
 136:	97 01       	movw	r18, r14
 138:	0e 94 4b 01 	call	0x296	; 0x296 <__divsf3>
 13c:	20 e0       	ldi	r18, 0x00	; 0
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	40 e8       	ldi	r20, 0x80	; 128
 142:	5f e3       	ldi	r21, 0x3F	; 63
 144:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <__subsf3>
 148:	0e 94 b3 01 	call	0x366	; 0x366 <__fixunssfsi>
 14c:	70 93 89 00 	sts	0x0089, r23
 150:	60 93 88 00 	sts	0x0088, r22
}


}
 154:	1f 91       	pop	r17
 156:	0f 91       	pop	r16
 158:	ff 90       	pop	r15
 15a:	ef 90       	pop	r14
 15c:	08 95       	ret

0000015e <main>:
  
int main(void)
{
 15e:	0f 93       	push	r16
 160:	1f 93       	push	r17
 162:	cf 93       	push	r28
 164:	df 93       	push	r29
    DDRB |= (1<<PINB1);
 166:	21 9a       	sbi	0x04, 1	; 4
	ADMUX |= (1<<REFS0);
 168:	80 91 7c 00 	lds	r24, 0x007C
 16c:	80 64       	ori	r24, 0x40	; 64
 16e:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA |= (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0); 
 172:	80 91 7a 00 	lds	r24, 0x007A
 176:	87 68       	ori	r24, 0x87	; 135
 178:	80 93 7a 00 	sts	0x007A, r24
	
	
    timer1_init();
 17c:	0e 94 40 00 	call	0x80	; 0x80 <timer1_init>
	
	set_speed((float)(0)); 
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	70 e0       	ldi	r23, 0x00	; 0
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	0e 94 67 00 	call	0xce	; 0xce <set_speed>
 18c:	c0 e0       	ldi	r28, 0x00	; 0
 18e:	d0 e0       	ldi	r29, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 190:	00 e2       	ldi	r16, 0x20	; 32
 192:	1e e4       	ldi	r17, 0x4E	; 78
  

		for(int i=0; i<=390; i++)
		{
			set_speed((float)(i)); 
 194:	be 01       	movw	r22, r28
 196:	88 27       	eor	r24, r24
 198:	77 fd       	sbrc	r23, 7
 19a:	80 95       	com	r24
 19c:	98 2f       	mov	r25, r24
 19e:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__floatsisf>
 1a2:	0e 94 67 00 	call	0xce	; 0xce <set_speed>
 1a6:	c8 01       	movw	r24, r16
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <main+0x4a>
    timer1_init();
	
	set_speed((float)(0)); 
  

		for(int i=0; i<=390; i++)
 1ac:	21 96       	adiw	r28, 0x01	; 1
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	c7 38       	cpi	r28, 0x87	; 135
 1b2:	d8 07       	cpc	r29, r24
 1b4:	79 f7       	brne	.-34     	; 0x194 <main+0x36>
		{
			set_speed((float)(i)); 
			_delay_ms(10);
		}
 
 1b6:	80 e0       	ldi	r24, 0x00	; 0
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	df 91       	pop	r29
 1bc:	cf 91       	pop	r28
 1be:	1f 91       	pop	r17
 1c0:	0f 91       	pop	r16
 1c2:	08 95       	ret

000001c4 <__subsf3>:
 1c4:	50 58       	subi	r21, 0x80	; 128

000001c6 <__addsf3>:
 1c6:	bb 27       	eor	r27, r27
 1c8:	aa 27       	eor	r26, r26
 1ca:	0e d0       	rcall	.+28     	; 0x1e8 <__addsf3x>
 1cc:	70 c1       	rjmp	.+736    	; 0x4ae <__fp_round>
 1ce:	61 d1       	rcall	.+706    	; 0x492 <__fp_pscA>
 1d0:	30 f0       	brcs	.+12     	; 0x1de <__addsf3+0x18>
 1d2:	66 d1       	rcall	.+716    	; 0x4a0 <__fp_pscB>
 1d4:	20 f0       	brcs	.+8      	; 0x1de <__addsf3+0x18>
 1d6:	31 f4       	brne	.+12     	; 0x1e4 <__addsf3+0x1e>
 1d8:	9f 3f       	cpi	r25, 0xFF	; 255
 1da:	11 f4       	brne	.+4      	; 0x1e0 <__addsf3+0x1a>
 1dc:	1e f4       	brtc	.+6      	; 0x1e4 <__addsf3+0x1e>
 1de:	56 c1       	rjmp	.+684    	; 0x48c <__fp_nan>
 1e0:	0e f4       	brtc	.+2      	; 0x1e4 <__addsf3+0x1e>
 1e2:	e0 95       	com	r30
 1e4:	e7 fb       	bst	r30, 7
 1e6:	4c c1       	rjmp	.+664    	; 0x480 <__fp_inf>

000001e8 <__addsf3x>:
 1e8:	e9 2f       	mov	r30, r25
 1ea:	72 d1       	rcall	.+740    	; 0x4d0 <__fp_split3>
 1ec:	80 f3       	brcs	.-32     	; 0x1ce <__addsf3+0x8>
 1ee:	ba 17       	cp	r27, r26
 1f0:	62 07       	cpc	r22, r18
 1f2:	73 07       	cpc	r23, r19
 1f4:	84 07       	cpc	r24, r20
 1f6:	95 07       	cpc	r25, r21
 1f8:	18 f0       	brcs	.+6      	; 0x200 <__addsf3x+0x18>
 1fa:	71 f4       	brne	.+28     	; 0x218 <__addsf3x+0x30>
 1fc:	9e f5       	brtc	.+102    	; 0x264 <__addsf3x+0x7c>
 1fe:	8a c1       	rjmp	.+788    	; 0x514 <__fp_zero>
 200:	0e f4       	brtc	.+2      	; 0x204 <__addsf3x+0x1c>
 202:	e0 95       	com	r30
 204:	0b 2e       	mov	r0, r27
 206:	ba 2f       	mov	r27, r26
 208:	a0 2d       	mov	r26, r0
 20a:	0b 01       	movw	r0, r22
 20c:	b9 01       	movw	r22, r18
 20e:	90 01       	movw	r18, r0
 210:	0c 01       	movw	r0, r24
 212:	ca 01       	movw	r24, r20
 214:	a0 01       	movw	r20, r0
 216:	11 24       	eor	r1, r1
 218:	ff 27       	eor	r31, r31
 21a:	59 1b       	sub	r21, r25
 21c:	99 f0       	breq	.+38     	; 0x244 <__addsf3x+0x5c>
 21e:	59 3f       	cpi	r21, 0xF9	; 249
 220:	50 f4       	brcc	.+20     	; 0x236 <__addsf3x+0x4e>
 222:	50 3e       	cpi	r21, 0xE0	; 224
 224:	68 f1       	brcs	.+90     	; 0x280 <__addsf3x+0x98>
 226:	1a 16       	cp	r1, r26
 228:	f0 40       	sbci	r31, 0x00	; 0
 22a:	a2 2f       	mov	r26, r18
 22c:	23 2f       	mov	r18, r19
 22e:	34 2f       	mov	r19, r20
 230:	44 27       	eor	r20, r20
 232:	58 5f       	subi	r21, 0xF8	; 248
 234:	f3 cf       	rjmp	.-26     	; 0x21c <__addsf3x+0x34>
 236:	46 95       	lsr	r20
 238:	37 95       	ror	r19
 23a:	27 95       	ror	r18
 23c:	a7 95       	ror	r26
 23e:	f0 40       	sbci	r31, 0x00	; 0
 240:	53 95       	inc	r21
 242:	c9 f7       	brne	.-14     	; 0x236 <__addsf3x+0x4e>
 244:	7e f4       	brtc	.+30     	; 0x264 <__addsf3x+0x7c>
 246:	1f 16       	cp	r1, r31
 248:	ba 0b       	sbc	r27, r26
 24a:	62 0b       	sbc	r22, r18
 24c:	73 0b       	sbc	r23, r19
 24e:	84 0b       	sbc	r24, r20
 250:	ba f0       	brmi	.+46     	; 0x280 <__addsf3x+0x98>
 252:	91 50       	subi	r25, 0x01	; 1
 254:	a1 f0       	breq	.+40     	; 0x27e <__addsf3x+0x96>
 256:	ff 0f       	add	r31, r31
 258:	bb 1f       	adc	r27, r27
 25a:	66 1f       	adc	r22, r22
 25c:	77 1f       	adc	r23, r23
 25e:	88 1f       	adc	r24, r24
 260:	c2 f7       	brpl	.-16     	; 0x252 <__addsf3x+0x6a>
 262:	0e c0       	rjmp	.+28     	; 0x280 <__addsf3x+0x98>
 264:	ba 0f       	add	r27, r26
 266:	62 1f       	adc	r22, r18
 268:	73 1f       	adc	r23, r19
 26a:	84 1f       	adc	r24, r20
 26c:	48 f4       	brcc	.+18     	; 0x280 <__addsf3x+0x98>
 26e:	87 95       	ror	r24
 270:	77 95       	ror	r23
 272:	67 95       	ror	r22
 274:	b7 95       	ror	r27
 276:	f7 95       	ror	r31
 278:	9e 3f       	cpi	r25, 0xFE	; 254
 27a:	08 f0       	brcs	.+2      	; 0x27e <__addsf3x+0x96>
 27c:	b3 cf       	rjmp	.-154    	; 0x1e4 <__addsf3+0x1e>
 27e:	93 95       	inc	r25
 280:	88 0f       	add	r24, r24
 282:	08 f0       	brcs	.+2      	; 0x286 <__addsf3x+0x9e>
 284:	99 27       	eor	r25, r25
 286:	ee 0f       	add	r30, r30
 288:	97 95       	ror	r25
 28a:	87 95       	ror	r24
 28c:	08 95       	ret

0000028e <__cmpsf2>:
 28e:	d4 d0       	rcall	.+424    	; 0x438 <__fp_cmp>
 290:	08 f4       	brcc	.+2      	; 0x294 <__cmpsf2+0x6>
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	08 95       	ret

00000296 <__divsf3>:
 296:	0c d0       	rcall	.+24     	; 0x2b0 <__divsf3x>
 298:	0a c1       	rjmp	.+532    	; 0x4ae <__fp_round>
 29a:	02 d1       	rcall	.+516    	; 0x4a0 <__fp_pscB>
 29c:	40 f0       	brcs	.+16     	; 0x2ae <__divsf3+0x18>
 29e:	f9 d0       	rcall	.+498    	; 0x492 <__fp_pscA>
 2a0:	30 f0       	brcs	.+12     	; 0x2ae <__divsf3+0x18>
 2a2:	21 f4       	brne	.+8      	; 0x2ac <__divsf3+0x16>
 2a4:	5f 3f       	cpi	r21, 0xFF	; 255
 2a6:	19 f0       	breq	.+6      	; 0x2ae <__divsf3+0x18>
 2a8:	eb c0       	rjmp	.+470    	; 0x480 <__fp_inf>
 2aa:	51 11       	cpse	r21, r1
 2ac:	34 c1       	rjmp	.+616    	; 0x516 <__fp_szero>
 2ae:	ee c0       	rjmp	.+476    	; 0x48c <__fp_nan>

000002b0 <__divsf3x>:
 2b0:	0f d1       	rcall	.+542    	; 0x4d0 <__fp_split3>
 2b2:	98 f3       	brcs	.-26     	; 0x29a <__divsf3+0x4>

000002b4 <__divsf3_pse>:
 2b4:	99 23       	and	r25, r25
 2b6:	c9 f3       	breq	.-14     	; 0x2aa <__divsf3+0x14>
 2b8:	55 23       	and	r21, r21
 2ba:	b1 f3       	breq	.-20     	; 0x2a8 <__divsf3+0x12>
 2bc:	95 1b       	sub	r25, r21
 2be:	55 0b       	sbc	r21, r21
 2c0:	bb 27       	eor	r27, r27
 2c2:	aa 27       	eor	r26, r26
 2c4:	62 17       	cp	r22, r18
 2c6:	73 07       	cpc	r23, r19
 2c8:	84 07       	cpc	r24, r20
 2ca:	38 f0       	brcs	.+14     	; 0x2da <__divsf3_pse+0x26>
 2cc:	9f 5f       	subi	r25, 0xFF	; 255
 2ce:	5f 4f       	sbci	r21, 0xFF	; 255
 2d0:	22 0f       	add	r18, r18
 2d2:	33 1f       	adc	r19, r19
 2d4:	44 1f       	adc	r20, r20
 2d6:	aa 1f       	adc	r26, r26
 2d8:	a9 f3       	breq	.-22     	; 0x2c4 <__divsf3_pse+0x10>
 2da:	33 d0       	rcall	.+102    	; 0x342 <__divsf3_pse+0x8e>
 2dc:	0e 2e       	mov	r0, r30
 2de:	3a f0       	brmi	.+14     	; 0x2ee <__divsf3_pse+0x3a>
 2e0:	e0 e8       	ldi	r30, 0x80	; 128
 2e2:	30 d0       	rcall	.+96     	; 0x344 <__divsf3_pse+0x90>
 2e4:	91 50       	subi	r25, 0x01	; 1
 2e6:	50 40       	sbci	r21, 0x00	; 0
 2e8:	e6 95       	lsr	r30
 2ea:	00 1c       	adc	r0, r0
 2ec:	ca f7       	brpl	.-14     	; 0x2e0 <__divsf3_pse+0x2c>
 2ee:	29 d0       	rcall	.+82     	; 0x342 <__divsf3_pse+0x8e>
 2f0:	fe 2f       	mov	r31, r30
 2f2:	27 d0       	rcall	.+78     	; 0x342 <__divsf3_pse+0x8e>
 2f4:	66 0f       	add	r22, r22
 2f6:	77 1f       	adc	r23, r23
 2f8:	88 1f       	adc	r24, r24
 2fa:	bb 1f       	adc	r27, r27
 2fc:	26 17       	cp	r18, r22
 2fe:	37 07       	cpc	r19, r23
 300:	48 07       	cpc	r20, r24
 302:	ab 07       	cpc	r26, r27
 304:	b0 e8       	ldi	r27, 0x80	; 128
 306:	09 f0       	breq	.+2      	; 0x30a <__divsf3_pse+0x56>
 308:	bb 0b       	sbc	r27, r27
 30a:	80 2d       	mov	r24, r0
 30c:	bf 01       	movw	r22, r30
 30e:	ff 27       	eor	r31, r31
 310:	93 58       	subi	r25, 0x83	; 131
 312:	5f 4f       	sbci	r21, 0xFF	; 255
 314:	2a f0       	brmi	.+10     	; 0x320 <__divsf3_pse+0x6c>
 316:	9e 3f       	cpi	r25, 0xFE	; 254
 318:	51 05       	cpc	r21, r1
 31a:	68 f0       	brcs	.+26     	; 0x336 <__divsf3_pse+0x82>
 31c:	b1 c0       	rjmp	.+354    	; 0x480 <__fp_inf>
 31e:	fb c0       	rjmp	.+502    	; 0x516 <__fp_szero>
 320:	5f 3f       	cpi	r21, 0xFF	; 255
 322:	ec f3       	brlt	.-6      	; 0x31e <__divsf3_pse+0x6a>
 324:	98 3e       	cpi	r25, 0xE8	; 232
 326:	dc f3       	brlt	.-10     	; 0x31e <__divsf3_pse+0x6a>
 328:	86 95       	lsr	r24
 32a:	77 95       	ror	r23
 32c:	67 95       	ror	r22
 32e:	b7 95       	ror	r27
 330:	f7 95       	ror	r31
 332:	9f 5f       	subi	r25, 0xFF	; 255
 334:	c9 f7       	brne	.-14     	; 0x328 <__divsf3_pse+0x74>
 336:	88 0f       	add	r24, r24
 338:	91 1d       	adc	r25, r1
 33a:	96 95       	lsr	r25
 33c:	87 95       	ror	r24
 33e:	97 f9       	bld	r25, 7
 340:	08 95       	ret
 342:	e1 e0       	ldi	r30, 0x01	; 1
 344:	66 0f       	add	r22, r22
 346:	77 1f       	adc	r23, r23
 348:	88 1f       	adc	r24, r24
 34a:	bb 1f       	adc	r27, r27
 34c:	62 17       	cp	r22, r18
 34e:	73 07       	cpc	r23, r19
 350:	84 07       	cpc	r24, r20
 352:	ba 07       	cpc	r27, r26
 354:	20 f0       	brcs	.+8      	; 0x35e <__divsf3_pse+0xaa>
 356:	62 1b       	sub	r22, r18
 358:	73 0b       	sbc	r23, r19
 35a:	84 0b       	sbc	r24, r20
 35c:	ba 0b       	sbc	r27, r26
 35e:	ee 1f       	adc	r30, r30
 360:	88 f7       	brcc	.-30     	; 0x344 <__divsf3_pse+0x90>
 362:	e0 95       	com	r30
 364:	08 95       	ret

00000366 <__fixunssfsi>:
 366:	bc d0       	rcall	.+376    	; 0x4e0 <__fp_splitA>
 368:	88 f0       	brcs	.+34     	; 0x38c <__fixunssfsi+0x26>
 36a:	9f 57       	subi	r25, 0x7F	; 127
 36c:	90 f0       	brcs	.+36     	; 0x392 <__fixunssfsi+0x2c>
 36e:	b9 2f       	mov	r27, r25
 370:	99 27       	eor	r25, r25
 372:	b7 51       	subi	r27, 0x17	; 23
 374:	a0 f0       	brcs	.+40     	; 0x39e <__fixunssfsi+0x38>
 376:	d1 f0       	breq	.+52     	; 0x3ac <__fixunssfsi+0x46>
 378:	66 0f       	add	r22, r22
 37a:	77 1f       	adc	r23, r23
 37c:	88 1f       	adc	r24, r24
 37e:	99 1f       	adc	r25, r25
 380:	1a f0       	brmi	.+6      	; 0x388 <__fixunssfsi+0x22>
 382:	ba 95       	dec	r27
 384:	c9 f7       	brne	.-14     	; 0x378 <__fixunssfsi+0x12>
 386:	12 c0       	rjmp	.+36     	; 0x3ac <__fixunssfsi+0x46>
 388:	b1 30       	cpi	r27, 0x01	; 1
 38a:	81 f0       	breq	.+32     	; 0x3ac <__fixunssfsi+0x46>
 38c:	c3 d0       	rcall	.+390    	; 0x514 <__fp_zero>
 38e:	b1 e0       	ldi	r27, 0x01	; 1
 390:	08 95       	ret
 392:	c0 c0       	rjmp	.+384    	; 0x514 <__fp_zero>
 394:	67 2f       	mov	r22, r23
 396:	78 2f       	mov	r23, r24
 398:	88 27       	eor	r24, r24
 39a:	b8 5f       	subi	r27, 0xF8	; 248
 39c:	39 f0       	breq	.+14     	; 0x3ac <__fixunssfsi+0x46>
 39e:	b9 3f       	cpi	r27, 0xF9	; 249
 3a0:	cc f3       	brlt	.-14     	; 0x394 <__fixunssfsi+0x2e>
 3a2:	86 95       	lsr	r24
 3a4:	77 95       	ror	r23
 3a6:	67 95       	ror	r22
 3a8:	b3 95       	inc	r27
 3aa:	d9 f7       	brne	.-10     	; 0x3a2 <__fixunssfsi+0x3c>
 3ac:	3e f4       	brtc	.+14     	; 0x3bc <__fixunssfsi+0x56>
 3ae:	90 95       	com	r25
 3b0:	80 95       	com	r24
 3b2:	70 95       	com	r23
 3b4:	61 95       	neg	r22
 3b6:	7f 4f       	sbci	r23, 0xFF	; 255
 3b8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ba:	9f 4f       	sbci	r25, 0xFF	; 255
 3bc:	08 95       	ret

000003be <__floatunsisf>:
 3be:	e8 94       	clt
 3c0:	09 c0       	rjmp	.+18     	; 0x3d4 <__floatsisf+0x12>

000003c2 <__floatsisf>:
 3c2:	97 fb       	bst	r25, 7
 3c4:	3e f4       	brtc	.+14     	; 0x3d4 <__floatsisf+0x12>
 3c6:	90 95       	com	r25
 3c8:	80 95       	com	r24
 3ca:	70 95       	com	r23
 3cc:	61 95       	neg	r22
 3ce:	7f 4f       	sbci	r23, 0xFF	; 255
 3d0:	8f 4f       	sbci	r24, 0xFF	; 255
 3d2:	9f 4f       	sbci	r25, 0xFF	; 255
 3d4:	99 23       	and	r25, r25
 3d6:	a9 f0       	breq	.+42     	; 0x402 <__floatsisf+0x40>
 3d8:	f9 2f       	mov	r31, r25
 3da:	96 e9       	ldi	r25, 0x96	; 150
 3dc:	bb 27       	eor	r27, r27
 3de:	93 95       	inc	r25
 3e0:	f6 95       	lsr	r31
 3e2:	87 95       	ror	r24
 3e4:	77 95       	ror	r23
 3e6:	67 95       	ror	r22
 3e8:	b7 95       	ror	r27
 3ea:	f1 11       	cpse	r31, r1
 3ec:	f8 cf       	rjmp	.-16     	; 0x3de <__floatsisf+0x1c>
 3ee:	fa f4       	brpl	.+62     	; 0x42e <__floatsisf+0x6c>
 3f0:	bb 0f       	add	r27, r27
 3f2:	11 f4       	brne	.+4      	; 0x3f8 <__floatsisf+0x36>
 3f4:	60 ff       	sbrs	r22, 0
 3f6:	1b c0       	rjmp	.+54     	; 0x42e <__floatsisf+0x6c>
 3f8:	6f 5f       	subi	r22, 0xFF	; 255
 3fa:	7f 4f       	sbci	r23, 0xFF	; 255
 3fc:	8f 4f       	sbci	r24, 0xFF	; 255
 3fe:	9f 4f       	sbci	r25, 0xFF	; 255
 400:	16 c0       	rjmp	.+44     	; 0x42e <__floatsisf+0x6c>
 402:	88 23       	and	r24, r24
 404:	11 f0       	breq	.+4      	; 0x40a <__floatsisf+0x48>
 406:	96 e9       	ldi	r25, 0x96	; 150
 408:	11 c0       	rjmp	.+34     	; 0x42c <__floatsisf+0x6a>
 40a:	77 23       	and	r23, r23
 40c:	21 f0       	breq	.+8      	; 0x416 <__floatsisf+0x54>
 40e:	9e e8       	ldi	r25, 0x8E	; 142
 410:	87 2f       	mov	r24, r23
 412:	76 2f       	mov	r23, r22
 414:	05 c0       	rjmp	.+10     	; 0x420 <__floatsisf+0x5e>
 416:	66 23       	and	r22, r22
 418:	71 f0       	breq	.+28     	; 0x436 <__floatsisf+0x74>
 41a:	96 e8       	ldi	r25, 0x86	; 134
 41c:	86 2f       	mov	r24, r22
 41e:	70 e0       	ldi	r23, 0x00	; 0
 420:	60 e0       	ldi	r22, 0x00	; 0
 422:	2a f0       	brmi	.+10     	; 0x42e <__floatsisf+0x6c>
 424:	9a 95       	dec	r25
 426:	66 0f       	add	r22, r22
 428:	77 1f       	adc	r23, r23
 42a:	88 1f       	adc	r24, r24
 42c:	da f7       	brpl	.-10     	; 0x424 <__floatsisf+0x62>
 42e:	88 0f       	add	r24, r24
 430:	96 95       	lsr	r25
 432:	87 95       	ror	r24
 434:	97 f9       	bld	r25, 7
 436:	08 95       	ret

00000438 <__fp_cmp>:
 438:	99 0f       	add	r25, r25
 43a:	00 08       	sbc	r0, r0
 43c:	55 0f       	add	r21, r21
 43e:	aa 0b       	sbc	r26, r26
 440:	e0 e8       	ldi	r30, 0x80	; 128
 442:	fe ef       	ldi	r31, 0xFE	; 254
 444:	16 16       	cp	r1, r22
 446:	17 06       	cpc	r1, r23
 448:	e8 07       	cpc	r30, r24
 44a:	f9 07       	cpc	r31, r25
 44c:	c0 f0       	brcs	.+48     	; 0x47e <__fp_cmp+0x46>
 44e:	12 16       	cp	r1, r18
 450:	13 06       	cpc	r1, r19
 452:	e4 07       	cpc	r30, r20
 454:	f5 07       	cpc	r31, r21
 456:	98 f0       	brcs	.+38     	; 0x47e <__fp_cmp+0x46>
 458:	62 1b       	sub	r22, r18
 45a:	73 0b       	sbc	r23, r19
 45c:	84 0b       	sbc	r24, r20
 45e:	95 0b       	sbc	r25, r21
 460:	39 f4       	brne	.+14     	; 0x470 <__fp_cmp+0x38>
 462:	0a 26       	eor	r0, r26
 464:	61 f0       	breq	.+24     	; 0x47e <__fp_cmp+0x46>
 466:	23 2b       	or	r18, r19
 468:	24 2b       	or	r18, r20
 46a:	25 2b       	or	r18, r21
 46c:	21 f4       	brne	.+8      	; 0x476 <__fp_cmp+0x3e>
 46e:	08 95       	ret
 470:	0a 26       	eor	r0, r26
 472:	09 f4       	brne	.+2      	; 0x476 <__fp_cmp+0x3e>
 474:	a1 40       	sbci	r26, 0x01	; 1
 476:	a6 95       	lsr	r26
 478:	8f ef       	ldi	r24, 0xFF	; 255
 47a:	81 1d       	adc	r24, r1
 47c:	81 1d       	adc	r24, r1
 47e:	08 95       	ret

00000480 <__fp_inf>:
 480:	97 f9       	bld	r25, 7
 482:	9f 67       	ori	r25, 0x7F	; 127
 484:	80 e8       	ldi	r24, 0x80	; 128
 486:	70 e0       	ldi	r23, 0x00	; 0
 488:	60 e0       	ldi	r22, 0x00	; 0
 48a:	08 95       	ret

0000048c <__fp_nan>:
 48c:	9f ef       	ldi	r25, 0xFF	; 255
 48e:	80 ec       	ldi	r24, 0xC0	; 192
 490:	08 95       	ret

00000492 <__fp_pscA>:
 492:	00 24       	eor	r0, r0
 494:	0a 94       	dec	r0
 496:	16 16       	cp	r1, r22
 498:	17 06       	cpc	r1, r23
 49a:	18 06       	cpc	r1, r24
 49c:	09 06       	cpc	r0, r25
 49e:	08 95       	ret

000004a0 <__fp_pscB>:
 4a0:	00 24       	eor	r0, r0
 4a2:	0a 94       	dec	r0
 4a4:	12 16       	cp	r1, r18
 4a6:	13 06       	cpc	r1, r19
 4a8:	14 06       	cpc	r1, r20
 4aa:	05 06       	cpc	r0, r21
 4ac:	08 95       	ret

000004ae <__fp_round>:
 4ae:	09 2e       	mov	r0, r25
 4b0:	03 94       	inc	r0
 4b2:	00 0c       	add	r0, r0
 4b4:	11 f4       	brne	.+4      	; 0x4ba <__fp_round+0xc>
 4b6:	88 23       	and	r24, r24
 4b8:	52 f0       	brmi	.+20     	; 0x4ce <__fp_round+0x20>
 4ba:	bb 0f       	add	r27, r27
 4bc:	40 f4       	brcc	.+16     	; 0x4ce <__fp_round+0x20>
 4be:	bf 2b       	or	r27, r31
 4c0:	11 f4       	brne	.+4      	; 0x4c6 <__fp_round+0x18>
 4c2:	60 ff       	sbrs	r22, 0
 4c4:	04 c0       	rjmp	.+8      	; 0x4ce <__fp_round+0x20>
 4c6:	6f 5f       	subi	r22, 0xFF	; 255
 4c8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ca:	8f 4f       	sbci	r24, 0xFF	; 255
 4cc:	9f 4f       	sbci	r25, 0xFF	; 255
 4ce:	08 95       	ret

000004d0 <__fp_split3>:
 4d0:	57 fd       	sbrc	r21, 7
 4d2:	90 58       	subi	r25, 0x80	; 128
 4d4:	44 0f       	add	r20, r20
 4d6:	55 1f       	adc	r21, r21
 4d8:	59 f0       	breq	.+22     	; 0x4f0 <__fp_splitA+0x10>
 4da:	5f 3f       	cpi	r21, 0xFF	; 255
 4dc:	71 f0       	breq	.+28     	; 0x4fa <__fp_splitA+0x1a>
 4de:	47 95       	ror	r20

000004e0 <__fp_splitA>:
 4e0:	88 0f       	add	r24, r24
 4e2:	97 fb       	bst	r25, 7
 4e4:	99 1f       	adc	r25, r25
 4e6:	61 f0       	breq	.+24     	; 0x500 <__fp_splitA+0x20>
 4e8:	9f 3f       	cpi	r25, 0xFF	; 255
 4ea:	79 f0       	breq	.+30     	; 0x50a <__fp_splitA+0x2a>
 4ec:	87 95       	ror	r24
 4ee:	08 95       	ret
 4f0:	12 16       	cp	r1, r18
 4f2:	13 06       	cpc	r1, r19
 4f4:	14 06       	cpc	r1, r20
 4f6:	55 1f       	adc	r21, r21
 4f8:	f2 cf       	rjmp	.-28     	; 0x4de <__fp_split3+0xe>
 4fa:	46 95       	lsr	r20
 4fc:	f1 df       	rcall	.-30     	; 0x4e0 <__fp_splitA>
 4fe:	08 c0       	rjmp	.+16     	; 0x510 <__fp_splitA+0x30>
 500:	16 16       	cp	r1, r22
 502:	17 06       	cpc	r1, r23
 504:	18 06       	cpc	r1, r24
 506:	99 1f       	adc	r25, r25
 508:	f1 cf       	rjmp	.-30     	; 0x4ec <__fp_splitA+0xc>
 50a:	86 95       	lsr	r24
 50c:	71 05       	cpc	r23, r1
 50e:	61 05       	cpc	r22, r1
 510:	08 94       	sec
 512:	08 95       	ret

00000514 <__fp_zero>:
 514:	e8 94       	clt

00000516 <__fp_szero>:
 516:	bb 27       	eor	r27, r27
 518:	66 27       	eor	r22, r22
 51a:	77 27       	eor	r23, r23
 51c:	cb 01       	movw	r24, r22
 51e:	97 f9       	bld	r25, 7
 520:	08 95       	ret

00000522 <__gesf2>:
 522:	8a df       	rcall	.-236    	; 0x438 <__fp_cmp>
 524:	08 f4       	brcc	.+2      	; 0x528 <__gesf2+0x6>
 526:	8f ef       	ldi	r24, 0xFF	; 255
 528:	08 95       	ret

0000052a <_exit>:
 52a:	f8 94       	cli

0000052c <__stop_program>:
 52c:	ff cf       	rjmp	.-2      	; 0x52c <__stop_program>
