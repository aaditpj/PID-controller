
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000780  00000814  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000780  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800104  00800104  00000818  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000818  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000009f  00000000  00000000  00000838  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000001d3  00000000  00000000  000008d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000010c  00000000  00000000  00000aaa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000244  00000000  00000000  00000bb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  00000dfc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000145  00000000  00000000  00000e7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ac  00000000  00000000  00000fc1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 29 01 	jmp	0x252	; 0x252 <__vector_1>
   8:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e8       	ldi	r30, 0x80	; 128
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a4 e0       	ldi	r26, 0x04	; 4
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a9 30       	cpi	r26, 0x09	; 9
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 04 01 	call	0x208	; 0x208 <main>
  9e:	0c 94 be 03 	jmp	0x77c	; 0x77c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <encoder_Init>:
volatile int8_t dir;
volatile int32_t maxSpeed=150;


void encoder_Init(void){
	EIMSK |= (1<<INT0)|(1<<INT1); // enabling external interrupt 0
  a6:	8d b3       	in	r24, 0x1d	; 29
  a8:	83 60       	ori	r24, 0x03	; 3
  aa:	8d bb       	out	0x1d, r24	; 29
	EICRA |= (1<<ISC10)|(1<<ISC00); //Interrupt set on logic change
  ac:	e9 e6       	ldi	r30, 0x69	; 105
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	80 81       	ld	r24, Z
  b2:	85 60       	ori	r24, 0x05	; 5
  b4:	80 83       	st	Z, r24
	encoderValue = 0;
  b6:	10 92 05 01 	sts	0x0105, r1
  ba:	10 92 06 01 	sts	0x0106, r1
  be:	10 92 07 01 	sts	0x0107, r1
  c2:	10 92 08 01 	sts	0x0108, r1
	
}
  c6:	08 95       	ret

000000c8 <timer1_init>:
  
// initialize timer, interrupt and variable
void timer1_init(void)
{
    // set up timer with prescaler = 8 and CTC mode
    TCCR1B |= (1 << WGM12)|(1 << CS11);
  c8:	e1 e8       	ldi	r30, 0x81	; 129
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	8a 60       	ori	r24, 0x0A	; 10
  d0:	80 83       	st	Z, r24
  
    // set up timer OC1A pin in toggle mode
    TCCR1A |= (1 << COM1A0); 
  d2:	e0 e8       	ldi	r30, 0x80	; 128
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	80 64       	ori	r24, 0x40	; 64
  da:	80 83       	st	Z, r24
	
  
    // initialize counter
    TCNT1 = 0;
  dc:	10 92 85 00 	sts	0x0085, r1
  e0:	10 92 84 00 	sts	0x0084, r1
    // initialize compare value
    OCR1A = 0;
  e4:	10 92 89 00 	sts	0x0089, r1
  e8:	10 92 88 00 	sts	0x0088, r1
	
	DDRB |= (1<<PINB1);
  ec:	21 9a       	sbi	0x04, 1	; 4
}
  ee:	08 95       	ret

000000f0 <set_speed>:

void set_speed(float RPM){
  f0:	ef 92       	push	r14
  f2:	ff 92       	push	r15
  f4:	0f 93       	push	r16
  f6:	1f 93       	push	r17
  f8:	7b 01       	movw	r14, r22
  fa:	8c 01       	movw	r16, r24


if(RPM<=0.1)
  fc:	2d ec       	ldi	r18, 0xCD	; 205
  fe:	3c ec       	ldi	r19, 0xCC	; 204
 100:	4c ec       	ldi	r20, 0xCC	; 204
 102:	5d e3       	ldi	r21, 0x3D	; 61
 104:	0e 94 08 02 	call	0x410	; 0x410 <__cmpsf2>
 108:	18 16       	cp	r1, r24
 10a:	34 f0       	brlt	.+12     	; 0x118 <set_speed+0x28>
{
	TCCR1A &= ~(1 << COM1A0);
 10c:	80 91 80 00 	lds	r24, 0x0080
 110:	8f 7b       	andi	r24, 0xBF	; 191
 112:	80 93 80 00 	sts	0x0080, r24
 116:	41 c0       	rjmp	.+130    	; 0x19a <set_speed+0xaa>
}
else if( RPM >=maxSpeed )
 118:	60 91 00 01 	lds	r22, 0x0100
 11c:	70 91 01 01 	lds	r23, 0x0101
 120:	80 91 02 01 	lds	r24, 0x0102
 124:	90 91 03 01 	lds	r25, 0x0103
 128:	0e 94 a7 02 	call	0x54e	; 0x54e <__floatsisf>
 12c:	9b 01       	movw	r18, r22
 12e:	ac 01       	movw	r20, r24
 130:	c8 01       	movw	r24, r16
 132:	b7 01       	movw	r22, r14
 134:	0e 94 57 03 	call	0x6ae	; 0x6ae <__gesf2>
 138:	88 23       	and	r24, r24
 13a:	b4 f0       	brlt	.+44     	; 0x168 <set_speed+0x78>
{
	TCCR1A |= (1 << COM1A0);
 13c:	80 91 80 00 	lds	r24, 0x0080
 140:	80 64       	ori	r24, 0x40	; 64
 142:	80 93 80 00 	sts	0x0080, r24
	OCR1A=(uint16_t)((1171.876/maxSpeed)-1);;
 146:	60 91 00 01 	lds	r22, 0x0100
 14a:	70 91 01 01 	lds	r23, 0x0101
 14e:	80 91 02 01 	lds	r24, 0x0102
 152:	90 91 03 01 	lds	r25, 0x0103
 156:	0e 94 a7 02 	call	0x54e	; 0x54e <__floatsisf>
 15a:	9b 01       	movw	r18, r22
 15c:	ac 01       	movw	r20, r24
 15e:	68 e0       	ldi	r22, 0x08	; 8
 160:	7c e7       	ldi	r23, 0x7C	; 124
 162:	82 e9       	ldi	r24, 0x92	; 146
 164:	94 e4       	ldi	r25, 0x44	; 68
 166:	0b c0       	rjmp	.+22     	; 0x17e <set_speed+0x8e>
}
else
{
	TCCR1A |= (1 << COM1A0);
 168:	80 91 80 00 	lds	r24, 0x0080
 16c:	80 64       	ori	r24, 0x40	; 64
 16e:	80 93 80 00 	sts	0x0080, r24
	OCR1A= (uint16_t)((1171.876/RPM)-1);
 172:	68 e0       	ldi	r22, 0x08	; 8
 174:	7c e7       	ldi	r23, 0x7C	; 124
 176:	82 e9       	ldi	r24, 0x92	; 146
 178:	94 e4       	ldi	r25, 0x44	; 68
 17a:	a8 01       	movw	r20, r16
 17c:	97 01       	movw	r18, r14
 17e:	0e 94 0c 02 	call	0x418	; 0x418 <__divsf3>
 182:	20 e0       	ldi	r18, 0x00	; 0
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	40 e8       	ldi	r20, 0x80	; 128
 188:	5f e3       	ldi	r21, 0x3F	; 63
 18a:	0e 94 a3 01 	call	0x346	; 0x346 <__subsf3>
 18e:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__fixunssfsi>
 192:	70 93 89 00 	sts	0x0089, r23
 196:	60 93 88 00 	sts	0x0088, r22
}


}
 19a:	1f 91       	pop	r17
 19c:	0f 91       	pop	r16
 19e:	ff 90       	pop	r15
 1a0:	ef 90       	pop	r14
 1a2:	08 95       	ret

000001a4 <set_position>:

uint8_t set_position(int32_t curPos, int32_t rqPos){
 1a4:	ef 92       	push	r14
 1a6:	ff 92       	push	r15
 1a8:	0f 93       	push	r16
 1aa:	1f 93       	push	r17
 1ac:	7b 01       	movw	r14, r22
 1ae:	8c 01       	movw	r16, r24
	
	int32_t error, currentSpeed;
	
	float kp=5.0f;
	
 	error=curPos-rqPos;
 1b0:	e2 1a       	sub	r14, r18
 1b2:	f3 0a       	sbc	r15, r19
 1b4:	04 0b       	sbc	r16, r20
 1b6:	15 0b       	sbc	r17, r21
	currentSpeed= error*kp;
 1b8:	c8 01       	movw	r24, r16
 1ba:	b7 01       	movw	r22, r14
 1bc:	0e 94 a7 02 	call	0x54e	; 0x54e <__floatsisf>
 1c0:	20 e0       	ldi	r18, 0x00	; 0
 1c2:	30 e0       	ldi	r19, 0x00	; 0
 1c4:	40 ea       	ldi	r20, 0xA0	; 160
 1c6:	50 e4       	ldi	r21, 0x40	; 64
 1c8:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <__mulsf3>
 1cc:	0e 94 74 02 	call	0x4e8	; 0x4e8 <__fixsfsi>
	
	if(currentSpeed<0)
 1d0:	97 ff       	sbrs	r25, 7
 1d2:	09 c0       	rjmp	.+18     	; 0x1e6 <set_position+0x42>
	{
		PORTB &= ~(1<<PINB2);
 1d4:	2a 98       	cbi	0x05, 2	; 5
		currentSpeed=-1*currentSpeed;
 1d6:	90 95       	com	r25
 1d8:	80 95       	com	r24
 1da:	70 95       	com	r23
 1dc:	61 95       	neg	r22
 1de:	7f 4f       	sbci	r23, 0xFF	; 255
 1e0:	8f 4f       	sbci	r24, 0xFF	; 255
 1e2:	9f 4f       	sbci	r25, 0xFF	; 255
 1e4:	01 c0       	rjmp	.+2      	; 0x1e8 <set_position+0x44>
	}
	else
		PORTB |= 1<<PINB2; //change direction
 1e6:	2a 9a       	sbi	0x05, 2	; 5
	
	set_speed(currentSpeed);
 1e8:	0e 94 a7 02 	call	0x54e	; 0x54e <__floatsisf>
 1ec:	0e 94 78 00 	call	0xf0	; 0xf0 <set_speed>
 1f0:	80 e0       	ldi	r24, 0x00	; 0
 1f2:	e1 14       	cp	r14, r1
 1f4:	f1 04       	cpc	r15, r1
 1f6:	01 05       	cpc	r16, r1
 1f8:	11 05       	cpc	r17, r1
 1fa:	09 f4       	brne	.+2      	; 0x1fe <set_position+0x5a>
 1fc:	81 e0       	ldi	r24, 0x01	; 1
	
	if(error==0)
		return 1;
	else
		return 0;
}
 1fe:	1f 91       	pop	r17
 200:	0f 91       	pop	r16
 202:	ff 90       	pop	r15
 204:	ef 90       	pop	r14
 206:	08 95       	ret

00000208 <main>:
volatile int8_t dir;
volatile int32_t maxSpeed=150;


void encoder_Init(void){
	EIMSK |= (1<<INT0)|(1<<INT1); // enabling external interrupt 0
 208:	8d b3       	in	r24, 0x1d	; 29
 20a:	83 60       	ori	r24, 0x03	; 3
 20c:	8d bb       	out	0x1d, r24	; 29
	EICRA |= (1<<ISC10)|(1<<ISC00); //Interrupt set on logic change
 20e:	80 91 69 00 	lds	r24, 0x0069
 212:	85 60       	ori	r24, 0x05	; 5
 214:	80 93 69 00 	sts	0x0069, r24
	encoderValue = 0;
 218:	10 92 05 01 	sts	0x0105, r1
 21c:	10 92 06 01 	sts	0x0106, r1
 220:	10 92 07 01 	sts	0x0107, r1
 224:	10 92 08 01 	sts	0x0108, r1
}

int main(void){

	encoder_Init();
	timer1_init();
 228:	0e 94 64 00 	call	0xc8	; 0xc8 <timer1_init>
	sei();
 22c:	78 94       	sei
	DDRB |=1<<PINB2 | 1<<PINB0;
 22e:	84 b1       	in	r24, 0x04	; 4
 230:	85 60       	ori	r24, 0x05	; 5
 232:	84 b9       	out	0x04, r24	; 4

	while(1){
		
		set_position(encoderValue,1440);
 234:	60 91 05 01 	lds	r22, 0x0105
 238:	70 91 06 01 	lds	r23, 0x0106
 23c:	80 91 07 01 	lds	r24, 0x0107
 240:	90 91 08 01 	lds	r25, 0x0108
 244:	20 ea       	ldi	r18, 0xA0	; 160
 246:	35 e0       	ldi	r19, 0x05	; 5
 248:	40 e0       	ldi	r20, 0x00	; 0
 24a:	50 e0       	ldi	r21, 0x00	; 0
 24c:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <set_position>
 250:	f1 cf       	rjmp	.-30     	; 0x234 <main+0x2c>

00000252 <__vector_1>:
}

//interrupt service routine for quadrature encoding

ISR(INT0_vect)
{
 252:	1f 92       	push	r1
 254:	0f 92       	push	r0
 256:	0f b6       	in	r0, 0x3f	; 63
 258:	0f 92       	push	r0
 25a:	11 24       	eor	r1, r1
 25c:	8f 93       	push	r24
 25e:	9f 93       	push	r25
 260:	af 93       	push	r26
 262:	bf 93       	push	r27
	if (bit_is_set(PIND,3))
 264:	4b 9b       	sbis	0x09, 3	; 9
 266:	03 c0       	rjmp	.+6      	; 0x26e <__vector_1+0x1c>
    {
        if (bit_is_set(PIND,2))
 268:	4a 9b       	sbis	0x09, 2	; 9
 26a:	03 c0       	rjmp	.+6      	; 0x272 <__vector_1+0x20>
 26c:	10 c0       	rjmp	.+32     	; 0x28e <__vector_1+0x3c>
            encoderValue--;
        }
    }
    else
    {
        if (bit_is_set(PIND,2) )
 26e:	4a 9b       	sbis	0x09, 2	; 9
 270:	0e c0       	rjmp	.+28     	; 0x28e <__vector_1+0x3c>
        {
            dir=0;
 272:	10 92 04 01 	sts	0x0104, r1
            encoderValue--;
 276:	80 91 05 01 	lds	r24, 0x0105
 27a:	90 91 06 01 	lds	r25, 0x0106
 27e:	a0 91 07 01 	lds	r26, 0x0107
 282:	b0 91 08 01 	lds	r27, 0x0108
 286:	01 97       	sbiw	r24, 0x01	; 1
 288:	a1 09       	sbc	r26, r1
 28a:	b1 09       	sbc	r27, r1
 28c:	0e c0       	rjmp	.+28     	; 0x2aa <__vector_1+0x58>
        }
        else
        {
            dir=1;
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	80 93 04 01 	sts	0x0104, r24
            encoderValue++;
 294:	80 91 05 01 	lds	r24, 0x0105
 298:	90 91 06 01 	lds	r25, 0x0106
 29c:	a0 91 07 01 	lds	r26, 0x0107
 2a0:	b0 91 08 01 	lds	r27, 0x0108
 2a4:	01 96       	adiw	r24, 0x01	; 1
 2a6:	a1 1d       	adc	r26, r1
 2a8:	b1 1d       	adc	r27, r1
 2aa:	80 93 05 01 	sts	0x0105, r24
 2ae:	90 93 06 01 	sts	0x0106, r25
 2b2:	a0 93 07 01 	sts	0x0107, r26
 2b6:	b0 93 08 01 	sts	0x0108, r27
        }
    }
}	
 2ba:	bf 91       	pop	r27
 2bc:	af 91       	pop	r26
 2be:	9f 91       	pop	r25
 2c0:	8f 91       	pop	r24
 2c2:	0f 90       	pop	r0
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	0f 90       	pop	r0
 2c8:	1f 90       	pop	r1
 2ca:	18 95       	reti

000002cc <__vector_2>:
	

ISR(INT1_vect){
 2cc:	1f 92       	push	r1
 2ce:	0f 92       	push	r0
 2d0:	0f b6       	in	r0, 0x3f	; 63
 2d2:	0f 92       	push	r0
 2d4:	11 24       	eor	r1, r1
 2d6:	8f 93       	push	r24
 2d8:	9f 93       	push	r25
 2da:	af 93       	push	r26
 2dc:	bf 93       	push	r27

	if (bit_is_set(PIND,3))
 2de:	4b 9b       	sbis	0x09, 3	; 9
 2e0:	03 c0       	rjmp	.+6      	; 0x2e8 <__vector_2+0x1c>
    {
        if (bit_is_set(PIND,2))
 2e2:	4a 9b       	sbis	0x09, 2	; 9
 2e4:	03 c0       	rjmp	.+6      	; 0x2ec <__vector_2+0x20>
 2e6:	11 c0       	rjmp	.+34     	; 0x30a <__vector_2+0x3e>
            encoderValue++;
        }
    }
    else
    {
        if (bit_is_set(PIND,2))
 2e8:	4a 9b       	sbis	0x09, 2	; 9
 2ea:	0f c0       	rjmp	.+30     	; 0x30a <__vector_2+0x3e>
        {
            dir=1;
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	80 93 04 01 	sts	0x0104, r24
            encoderValue++;
 2f2:	80 91 05 01 	lds	r24, 0x0105
 2f6:	90 91 06 01 	lds	r25, 0x0106
 2fa:	a0 91 07 01 	lds	r26, 0x0107
 2fe:	b0 91 08 01 	lds	r27, 0x0108
 302:	01 96       	adiw	r24, 0x01	; 1
 304:	a1 1d       	adc	r26, r1
 306:	b1 1d       	adc	r27, r1
 308:	0d c0       	rjmp	.+26     	; 0x324 <__vector_2+0x58>
        }
        else
        {
            dir=0;
 30a:	10 92 04 01 	sts	0x0104, r1
            encoderValue--;
 30e:	80 91 05 01 	lds	r24, 0x0105
 312:	90 91 06 01 	lds	r25, 0x0106
 316:	a0 91 07 01 	lds	r26, 0x0107
 31a:	b0 91 08 01 	lds	r27, 0x0108
 31e:	01 97       	sbiw	r24, 0x01	; 1
 320:	a1 09       	sbc	r26, r1
 322:	b1 09       	sbc	r27, r1
 324:	80 93 05 01 	sts	0x0105, r24
 328:	90 93 06 01 	sts	0x0106, r25
 32c:	a0 93 07 01 	sts	0x0107, r26
 330:	b0 93 08 01 	sts	0x0108, r27
        }
    }
	
}
 334:	bf 91       	pop	r27
 336:	af 91       	pop	r26
 338:	9f 91       	pop	r25
 33a:	8f 91       	pop	r24
 33c:	0f 90       	pop	r0
 33e:	0f be       	out	0x3f, r0	; 63
 340:	0f 90       	pop	r0
 342:	1f 90       	pop	r1
 344:	18 95       	reti

00000346 <__subsf3>:
 346:	50 58       	subi	r21, 0x80	; 128

00000348 <__addsf3>:
 348:	bb 27       	eor	r27, r27
 34a:	aa 27       	eor	r26, r26
 34c:	0e d0       	rcall	.+28     	; 0x36a <__addsf3x>
 34e:	75 c1       	rjmp	.+746    	; 0x63a <__fp_round>
 350:	66 d1       	rcall	.+716    	; 0x61e <__fp_pscA>
 352:	30 f0       	brcs	.+12     	; 0x360 <__addsf3+0x18>
 354:	6b d1       	rcall	.+726    	; 0x62c <__fp_pscB>
 356:	20 f0       	brcs	.+8      	; 0x360 <__addsf3+0x18>
 358:	31 f4       	brne	.+12     	; 0x366 <__addsf3+0x1e>
 35a:	9f 3f       	cpi	r25, 0xFF	; 255
 35c:	11 f4       	brne	.+4      	; 0x362 <__addsf3+0x1a>
 35e:	1e f4       	brtc	.+6      	; 0x366 <__addsf3+0x1e>
 360:	5b c1       	rjmp	.+694    	; 0x618 <__fp_nan>
 362:	0e f4       	brtc	.+2      	; 0x366 <__addsf3+0x1e>
 364:	e0 95       	com	r30
 366:	e7 fb       	bst	r30, 7
 368:	51 c1       	rjmp	.+674    	; 0x60c <__fp_inf>

0000036a <__addsf3x>:
 36a:	e9 2f       	mov	r30, r25
 36c:	77 d1       	rcall	.+750    	; 0x65c <__fp_split3>
 36e:	80 f3       	brcs	.-32     	; 0x350 <__addsf3+0x8>
 370:	ba 17       	cp	r27, r26
 372:	62 07       	cpc	r22, r18
 374:	73 07       	cpc	r23, r19
 376:	84 07       	cpc	r24, r20
 378:	95 07       	cpc	r25, r21
 37a:	18 f0       	brcs	.+6      	; 0x382 <__addsf3x+0x18>
 37c:	71 f4       	brne	.+28     	; 0x39a <__addsf3x+0x30>
 37e:	9e f5       	brtc	.+102    	; 0x3e6 <__addsf3x+0x7c>
 380:	8f c1       	rjmp	.+798    	; 0x6a0 <__fp_zero>
 382:	0e f4       	brtc	.+2      	; 0x386 <__addsf3x+0x1c>
 384:	e0 95       	com	r30
 386:	0b 2e       	mov	r0, r27
 388:	ba 2f       	mov	r27, r26
 38a:	a0 2d       	mov	r26, r0
 38c:	0b 01       	movw	r0, r22
 38e:	b9 01       	movw	r22, r18
 390:	90 01       	movw	r18, r0
 392:	0c 01       	movw	r0, r24
 394:	ca 01       	movw	r24, r20
 396:	a0 01       	movw	r20, r0
 398:	11 24       	eor	r1, r1
 39a:	ff 27       	eor	r31, r31
 39c:	59 1b       	sub	r21, r25
 39e:	99 f0       	breq	.+38     	; 0x3c6 <__addsf3x+0x5c>
 3a0:	59 3f       	cpi	r21, 0xF9	; 249
 3a2:	50 f4       	brcc	.+20     	; 0x3b8 <__addsf3x+0x4e>
 3a4:	50 3e       	cpi	r21, 0xE0	; 224
 3a6:	68 f1       	brcs	.+90     	; 0x402 <__addsf3x+0x98>
 3a8:	1a 16       	cp	r1, r26
 3aa:	f0 40       	sbci	r31, 0x00	; 0
 3ac:	a2 2f       	mov	r26, r18
 3ae:	23 2f       	mov	r18, r19
 3b0:	34 2f       	mov	r19, r20
 3b2:	44 27       	eor	r20, r20
 3b4:	58 5f       	subi	r21, 0xF8	; 248
 3b6:	f3 cf       	rjmp	.-26     	; 0x39e <__addsf3x+0x34>
 3b8:	46 95       	lsr	r20
 3ba:	37 95       	ror	r19
 3bc:	27 95       	ror	r18
 3be:	a7 95       	ror	r26
 3c0:	f0 40       	sbci	r31, 0x00	; 0
 3c2:	53 95       	inc	r21
 3c4:	c9 f7       	brne	.-14     	; 0x3b8 <__addsf3x+0x4e>
 3c6:	7e f4       	brtc	.+30     	; 0x3e6 <__addsf3x+0x7c>
 3c8:	1f 16       	cp	r1, r31
 3ca:	ba 0b       	sbc	r27, r26
 3cc:	62 0b       	sbc	r22, r18
 3ce:	73 0b       	sbc	r23, r19
 3d0:	84 0b       	sbc	r24, r20
 3d2:	ba f0       	brmi	.+46     	; 0x402 <__addsf3x+0x98>
 3d4:	91 50       	subi	r25, 0x01	; 1
 3d6:	a1 f0       	breq	.+40     	; 0x400 <__addsf3x+0x96>
 3d8:	ff 0f       	add	r31, r31
 3da:	bb 1f       	adc	r27, r27
 3dc:	66 1f       	adc	r22, r22
 3de:	77 1f       	adc	r23, r23
 3e0:	88 1f       	adc	r24, r24
 3e2:	c2 f7       	brpl	.-16     	; 0x3d4 <__addsf3x+0x6a>
 3e4:	0e c0       	rjmp	.+28     	; 0x402 <__addsf3x+0x98>
 3e6:	ba 0f       	add	r27, r26
 3e8:	62 1f       	adc	r22, r18
 3ea:	73 1f       	adc	r23, r19
 3ec:	84 1f       	adc	r24, r20
 3ee:	48 f4       	brcc	.+18     	; 0x402 <__addsf3x+0x98>
 3f0:	87 95       	ror	r24
 3f2:	77 95       	ror	r23
 3f4:	67 95       	ror	r22
 3f6:	b7 95       	ror	r27
 3f8:	f7 95       	ror	r31
 3fa:	9e 3f       	cpi	r25, 0xFE	; 254
 3fc:	08 f0       	brcs	.+2      	; 0x400 <__addsf3x+0x96>
 3fe:	b3 cf       	rjmp	.-154    	; 0x366 <__addsf3+0x1e>
 400:	93 95       	inc	r25
 402:	88 0f       	add	r24, r24
 404:	08 f0       	brcs	.+2      	; 0x408 <__addsf3x+0x9e>
 406:	99 27       	eor	r25, r25
 408:	ee 0f       	add	r30, r30
 40a:	97 95       	ror	r25
 40c:	87 95       	ror	r24
 40e:	08 95       	ret

00000410 <__cmpsf2>:
 410:	d9 d0       	rcall	.+434    	; 0x5c4 <__fp_cmp>
 412:	08 f4       	brcc	.+2      	; 0x416 <__cmpsf2+0x6>
 414:	81 e0       	ldi	r24, 0x01	; 1
 416:	08 95       	ret

00000418 <__divsf3>:
 418:	0c d0       	rcall	.+24     	; 0x432 <__divsf3x>
 41a:	0f c1       	rjmp	.+542    	; 0x63a <__fp_round>
 41c:	07 d1       	rcall	.+526    	; 0x62c <__fp_pscB>
 41e:	40 f0       	brcs	.+16     	; 0x430 <__divsf3+0x18>
 420:	fe d0       	rcall	.+508    	; 0x61e <__fp_pscA>
 422:	30 f0       	brcs	.+12     	; 0x430 <__divsf3+0x18>
 424:	21 f4       	brne	.+8      	; 0x42e <__divsf3+0x16>
 426:	5f 3f       	cpi	r21, 0xFF	; 255
 428:	19 f0       	breq	.+6      	; 0x430 <__divsf3+0x18>
 42a:	f0 c0       	rjmp	.+480    	; 0x60c <__fp_inf>
 42c:	51 11       	cpse	r21, r1
 42e:	39 c1       	rjmp	.+626    	; 0x6a2 <__fp_szero>
 430:	f3 c0       	rjmp	.+486    	; 0x618 <__fp_nan>

00000432 <__divsf3x>:
 432:	14 d1       	rcall	.+552    	; 0x65c <__fp_split3>
 434:	98 f3       	brcs	.-26     	; 0x41c <__divsf3+0x4>

00000436 <__divsf3_pse>:
 436:	99 23       	and	r25, r25
 438:	c9 f3       	breq	.-14     	; 0x42c <__divsf3+0x14>
 43a:	55 23       	and	r21, r21
 43c:	b1 f3       	breq	.-20     	; 0x42a <__divsf3+0x12>
 43e:	95 1b       	sub	r25, r21
 440:	55 0b       	sbc	r21, r21
 442:	bb 27       	eor	r27, r27
 444:	aa 27       	eor	r26, r26
 446:	62 17       	cp	r22, r18
 448:	73 07       	cpc	r23, r19
 44a:	84 07       	cpc	r24, r20
 44c:	38 f0       	brcs	.+14     	; 0x45c <__divsf3_pse+0x26>
 44e:	9f 5f       	subi	r25, 0xFF	; 255
 450:	5f 4f       	sbci	r21, 0xFF	; 255
 452:	22 0f       	add	r18, r18
 454:	33 1f       	adc	r19, r19
 456:	44 1f       	adc	r20, r20
 458:	aa 1f       	adc	r26, r26
 45a:	a9 f3       	breq	.-22     	; 0x446 <__divsf3_pse+0x10>
 45c:	33 d0       	rcall	.+102    	; 0x4c4 <__divsf3_pse+0x8e>
 45e:	0e 2e       	mov	r0, r30
 460:	3a f0       	brmi	.+14     	; 0x470 <__divsf3_pse+0x3a>
 462:	e0 e8       	ldi	r30, 0x80	; 128
 464:	30 d0       	rcall	.+96     	; 0x4c6 <__divsf3_pse+0x90>
 466:	91 50       	subi	r25, 0x01	; 1
 468:	50 40       	sbci	r21, 0x00	; 0
 46a:	e6 95       	lsr	r30
 46c:	00 1c       	adc	r0, r0
 46e:	ca f7       	brpl	.-14     	; 0x462 <__divsf3_pse+0x2c>
 470:	29 d0       	rcall	.+82     	; 0x4c4 <__divsf3_pse+0x8e>
 472:	fe 2f       	mov	r31, r30
 474:	27 d0       	rcall	.+78     	; 0x4c4 <__divsf3_pse+0x8e>
 476:	66 0f       	add	r22, r22
 478:	77 1f       	adc	r23, r23
 47a:	88 1f       	adc	r24, r24
 47c:	bb 1f       	adc	r27, r27
 47e:	26 17       	cp	r18, r22
 480:	37 07       	cpc	r19, r23
 482:	48 07       	cpc	r20, r24
 484:	ab 07       	cpc	r26, r27
 486:	b0 e8       	ldi	r27, 0x80	; 128
 488:	09 f0       	breq	.+2      	; 0x48c <__divsf3_pse+0x56>
 48a:	bb 0b       	sbc	r27, r27
 48c:	80 2d       	mov	r24, r0
 48e:	bf 01       	movw	r22, r30
 490:	ff 27       	eor	r31, r31
 492:	93 58       	subi	r25, 0x83	; 131
 494:	5f 4f       	sbci	r21, 0xFF	; 255
 496:	2a f0       	brmi	.+10     	; 0x4a2 <__divsf3_pse+0x6c>
 498:	9e 3f       	cpi	r25, 0xFE	; 254
 49a:	51 05       	cpc	r21, r1
 49c:	68 f0       	brcs	.+26     	; 0x4b8 <__divsf3_pse+0x82>
 49e:	b6 c0       	rjmp	.+364    	; 0x60c <__fp_inf>
 4a0:	00 c1       	rjmp	.+512    	; 0x6a2 <__fp_szero>
 4a2:	5f 3f       	cpi	r21, 0xFF	; 255
 4a4:	ec f3       	brlt	.-6      	; 0x4a0 <__divsf3_pse+0x6a>
 4a6:	98 3e       	cpi	r25, 0xE8	; 232
 4a8:	dc f3       	brlt	.-10     	; 0x4a0 <__divsf3_pse+0x6a>
 4aa:	86 95       	lsr	r24
 4ac:	77 95       	ror	r23
 4ae:	67 95       	ror	r22
 4b0:	b7 95       	ror	r27
 4b2:	f7 95       	ror	r31
 4b4:	9f 5f       	subi	r25, 0xFF	; 255
 4b6:	c9 f7       	brne	.-14     	; 0x4aa <__divsf3_pse+0x74>
 4b8:	88 0f       	add	r24, r24
 4ba:	91 1d       	adc	r25, r1
 4bc:	96 95       	lsr	r25
 4be:	87 95       	ror	r24
 4c0:	97 f9       	bld	r25, 7
 4c2:	08 95       	ret
 4c4:	e1 e0       	ldi	r30, 0x01	; 1
 4c6:	66 0f       	add	r22, r22
 4c8:	77 1f       	adc	r23, r23
 4ca:	88 1f       	adc	r24, r24
 4cc:	bb 1f       	adc	r27, r27
 4ce:	62 17       	cp	r22, r18
 4d0:	73 07       	cpc	r23, r19
 4d2:	84 07       	cpc	r24, r20
 4d4:	ba 07       	cpc	r27, r26
 4d6:	20 f0       	brcs	.+8      	; 0x4e0 <__divsf3_pse+0xaa>
 4d8:	62 1b       	sub	r22, r18
 4da:	73 0b       	sbc	r23, r19
 4dc:	84 0b       	sbc	r24, r20
 4de:	ba 0b       	sbc	r27, r26
 4e0:	ee 1f       	adc	r30, r30
 4e2:	88 f7       	brcc	.-30     	; 0x4c6 <__divsf3_pse+0x90>
 4e4:	e0 95       	com	r30
 4e6:	08 95       	ret

000004e8 <__fixsfsi>:
 4e8:	04 d0       	rcall	.+8      	; 0x4f2 <__fixunssfsi>
 4ea:	68 94       	set
 4ec:	b1 11       	cpse	r27, r1
 4ee:	d9 c0       	rjmp	.+434    	; 0x6a2 <__fp_szero>
 4f0:	08 95       	ret

000004f2 <__fixunssfsi>:
 4f2:	bc d0       	rcall	.+376    	; 0x66c <__fp_splitA>
 4f4:	88 f0       	brcs	.+34     	; 0x518 <__fixunssfsi+0x26>
 4f6:	9f 57       	subi	r25, 0x7F	; 127
 4f8:	90 f0       	brcs	.+36     	; 0x51e <__fixunssfsi+0x2c>
 4fa:	b9 2f       	mov	r27, r25
 4fc:	99 27       	eor	r25, r25
 4fe:	b7 51       	subi	r27, 0x17	; 23
 500:	a0 f0       	brcs	.+40     	; 0x52a <__fixunssfsi+0x38>
 502:	d1 f0       	breq	.+52     	; 0x538 <__fixunssfsi+0x46>
 504:	66 0f       	add	r22, r22
 506:	77 1f       	adc	r23, r23
 508:	88 1f       	adc	r24, r24
 50a:	99 1f       	adc	r25, r25
 50c:	1a f0       	brmi	.+6      	; 0x514 <__fixunssfsi+0x22>
 50e:	ba 95       	dec	r27
 510:	c9 f7       	brne	.-14     	; 0x504 <__fixunssfsi+0x12>
 512:	12 c0       	rjmp	.+36     	; 0x538 <__fixunssfsi+0x46>
 514:	b1 30       	cpi	r27, 0x01	; 1
 516:	81 f0       	breq	.+32     	; 0x538 <__fixunssfsi+0x46>
 518:	c3 d0       	rcall	.+390    	; 0x6a0 <__fp_zero>
 51a:	b1 e0       	ldi	r27, 0x01	; 1
 51c:	08 95       	ret
 51e:	c0 c0       	rjmp	.+384    	; 0x6a0 <__fp_zero>
 520:	67 2f       	mov	r22, r23
 522:	78 2f       	mov	r23, r24
 524:	88 27       	eor	r24, r24
 526:	b8 5f       	subi	r27, 0xF8	; 248
 528:	39 f0       	breq	.+14     	; 0x538 <__fixunssfsi+0x46>
 52a:	b9 3f       	cpi	r27, 0xF9	; 249
 52c:	cc f3       	brlt	.-14     	; 0x520 <__fixunssfsi+0x2e>
 52e:	86 95       	lsr	r24
 530:	77 95       	ror	r23
 532:	67 95       	ror	r22
 534:	b3 95       	inc	r27
 536:	d9 f7       	brne	.-10     	; 0x52e <__fixunssfsi+0x3c>
 538:	3e f4       	brtc	.+14     	; 0x548 <__fixunssfsi+0x56>
 53a:	90 95       	com	r25
 53c:	80 95       	com	r24
 53e:	70 95       	com	r23
 540:	61 95       	neg	r22
 542:	7f 4f       	sbci	r23, 0xFF	; 255
 544:	8f 4f       	sbci	r24, 0xFF	; 255
 546:	9f 4f       	sbci	r25, 0xFF	; 255
 548:	08 95       	ret

0000054a <__floatunsisf>:
 54a:	e8 94       	clt
 54c:	09 c0       	rjmp	.+18     	; 0x560 <__floatsisf+0x12>

0000054e <__floatsisf>:
 54e:	97 fb       	bst	r25, 7
 550:	3e f4       	brtc	.+14     	; 0x560 <__floatsisf+0x12>
 552:	90 95       	com	r25
 554:	80 95       	com	r24
 556:	70 95       	com	r23
 558:	61 95       	neg	r22
 55a:	7f 4f       	sbci	r23, 0xFF	; 255
 55c:	8f 4f       	sbci	r24, 0xFF	; 255
 55e:	9f 4f       	sbci	r25, 0xFF	; 255
 560:	99 23       	and	r25, r25
 562:	a9 f0       	breq	.+42     	; 0x58e <__floatsisf+0x40>
 564:	f9 2f       	mov	r31, r25
 566:	96 e9       	ldi	r25, 0x96	; 150
 568:	bb 27       	eor	r27, r27
 56a:	93 95       	inc	r25
 56c:	f6 95       	lsr	r31
 56e:	87 95       	ror	r24
 570:	77 95       	ror	r23
 572:	67 95       	ror	r22
 574:	b7 95       	ror	r27
 576:	f1 11       	cpse	r31, r1
 578:	f8 cf       	rjmp	.-16     	; 0x56a <__floatsisf+0x1c>
 57a:	fa f4       	brpl	.+62     	; 0x5ba <__floatsisf+0x6c>
 57c:	bb 0f       	add	r27, r27
 57e:	11 f4       	brne	.+4      	; 0x584 <__floatsisf+0x36>
 580:	60 ff       	sbrs	r22, 0
 582:	1b c0       	rjmp	.+54     	; 0x5ba <__floatsisf+0x6c>
 584:	6f 5f       	subi	r22, 0xFF	; 255
 586:	7f 4f       	sbci	r23, 0xFF	; 255
 588:	8f 4f       	sbci	r24, 0xFF	; 255
 58a:	9f 4f       	sbci	r25, 0xFF	; 255
 58c:	16 c0       	rjmp	.+44     	; 0x5ba <__floatsisf+0x6c>
 58e:	88 23       	and	r24, r24
 590:	11 f0       	breq	.+4      	; 0x596 <__floatsisf+0x48>
 592:	96 e9       	ldi	r25, 0x96	; 150
 594:	11 c0       	rjmp	.+34     	; 0x5b8 <__floatsisf+0x6a>
 596:	77 23       	and	r23, r23
 598:	21 f0       	breq	.+8      	; 0x5a2 <__floatsisf+0x54>
 59a:	9e e8       	ldi	r25, 0x8E	; 142
 59c:	87 2f       	mov	r24, r23
 59e:	76 2f       	mov	r23, r22
 5a0:	05 c0       	rjmp	.+10     	; 0x5ac <__floatsisf+0x5e>
 5a2:	66 23       	and	r22, r22
 5a4:	71 f0       	breq	.+28     	; 0x5c2 <__floatsisf+0x74>
 5a6:	96 e8       	ldi	r25, 0x86	; 134
 5a8:	86 2f       	mov	r24, r22
 5aa:	70 e0       	ldi	r23, 0x00	; 0
 5ac:	60 e0       	ldi	r22, 0x00	; 0
 5ae:	2a f0       	brmi	.+10     	; 0x5ba <__floatsisf+0x6c>
 5b0:	9a 95       	dec	r25
 5b2:	66 0f       	add	r22, r22
 5b4:	77 1f       	adc	r23, r23
 5b6:	88 1f       	adc	r24, r24
 5b8:	da f7       	brpl	.-10     	; 0x5b0 <__floatsisf+0x62>
 5ba:	88 0f       	add	r24, r24
 5bc:	96 95       	lsr	r25
 5be:	87 95       	ror	r24
 5c0:	97 f9       	bld	r25, 7
 5c2:	08 95       	ret

000005c4 <__fp_cmp>:
 5c4:	99 0f       	add	r25, r25
 5c6:	00 08       	sbc	r0, r0
 5c8:	55 0f       	add	r21, r21
 5ca:	aa 0b       	sbc	r26, r26
 5cc:	e0 e8       	ldi	r30, 0x80	; 128
 5ce:	fe ef       	ldi	r31, 0xFE	; 254
 5d0:	16 16       	cp	r1, r22
 5d2:	17 06       	cpc	r1, r23
 5d4:	e8 07       	cpc	r30, r24
 5d6:	f9 07       	cpc	r31, r25
 5d8:	c0 f0       	brcs	.+48     	; 0x60a <__fp_cmp+0x46>
 5da:	12 16       	cp	r1, r18
 5dc:	13 06       	cpc	r1, r19
 5de:	e4 07       	cpc	r30, r20
 5e0:	f5 07       	cpc	r31, r21
 5e2:	98 f0       	brcs	.+38     	; 0x60a <__fp_cmp+0x46>
 5e4:	62 1b       	sub	r22, r18
 5e6:	73 0b       	sbc	r23, r19
 5e8:	84 0b       	sbc	r24, r20
 5ea:	95 0b       	sbc	r25, r21
 5ec:	39 f4       	brne	.+14     	; 0x5fc <__fp_cmp+0x38>
 5ee:	0a 26       	eor	r0, r26
 5f0:	61 f0       	breq	.+24     	; 0x60a <__fp_cmp+0x46>
 5f2:	23 2b       	or	r18, r19
 5f4:	24 2b       	or	r18, r20
 5f6:	25 2b       	or	r18, r21
 5f8:	21 f4       	brne	.+8      	; 0x602 <__fp_cmp+0x3e>
 5fa:	08 95       	ret
 5fc:	0a 26       	eor	r0, r26
 5fe:	09 f4       	brne	.+2      	; 0x602 <__fp_cmp+0x3e>
 600:	a1 40       	sbci	r26, 0x01	; 1
 602:	a6 95       	lsr	r26
 604:	8f ef       	ldi	r24, 0xFF	; 255
 606:	81 1d       	adc	r24, r1
 608:	81 1d       	adc	r24, r1
 60a:	08 95       	ret

0000060c <__fp_inf>:
 60c:	97 f9       	bld	r25, 7
 60e:	9f 67       	ori	r25, 0x7F	; 127
 610:	80 e8       	ldi	r24, 0x80	; 128
 612:	70 e0       	ldi	r23, 0x00	; 0
 614:	60 e0       	ldi	r22, 0x00	; 0
 616:	08 95       	ret

00000618 <__fp_nan>:
 618:	9f ef       	ldi	r25, 0xFF	; 255
 61a:	80 ec       	ldi	r24, 0xC0	; 192
 61c:	08 95       	ret

0000061e <__fp_pscA>:
 61e:	00 24       	eor	r0, r0
 620:	0a 94       	dec	r0
 622:	16 16       	cp	r1, r22
 624:	17 06       	cpc	r1, r23
 626:	18 06       	cpc	r1, r24
 628:	09 06       	cpc	r0, r25
 62a:	08 95       	ret

0000062c <__fp_pscB>:
 62c:	00 24       	eor	r0, r0
 62e:	0a 94       	dec	r0
 630:	12 16       	cp	r1, r18
 632:	13 06       	cpc	r1, r19
 634:	14 06       	cpc	r1, r20
 636:	05 06       	cpc	r0, r21
 638:	08 95       	ret

0000063a <__fp_round>:
 63a:	09 2e       	mov	r0, r25
 63c:	03 94       	inc	r0
 63e:	00 0c       	add	r0, r0
 640:	11 f4       	brne	.+4      	; 0x646 <__fp_round+0xc>
 642:	88 23       	and	r24, r24
 644:	52 f0       	brmi	.+20     	; 0x65a <__fp_round+0x20>
 646:	bb 0f       	add	r27, r27
 648:	40 f4       	brcc	.+16     	; 0x65a <__fp_round+0x20>
 64a:	bf 2b       	or	r27, r31
 64c:	11 f4       	brne	.+4      	; 0x652 <__fp_round+0x18>
 64e:	60 ff       	sbrs	r22, 0
 650:	04 c0       	rjmp	.+8      	; 0x65a <__fp_round+0x20>
 652:	6f 5f       	subi	r22, 0xFF	; 255
 654:	7f 4f       	sbci	r23, 0xFF	; 255
 656:	8f 4f       	sbci	r24, 0xFF	; 255
 658:	9f 4f       	sbci	r25, 0xFF	; 255
 65a:	08 95       	ret

0000065c <__fp_split3>:
 65c:	57 fd       	sbrc	r21, 7
 65e:	90 58       	subi	r25, 0x80	; 128
 660:	44 0f       	add	r20, r20
 662:	55 1f       	adc	r21, r21
 664:	59 f0       	breq	.+22     	; 0x67c <__fp_splitA+0x10>
 666:	5f 3f       	cpi	r21, 0xFF	; 255
 668:	71 f0       	breq	.+28     	; 0x686 <__fp_splitA+0x1a>
 66a:	47 95       	ror	r20

0000066c <__fp_splitA>:
 66c:	88 0f       	add	r24, r24
 66e:	97 fb       	bst	r25, 7
 670:	99 1f       	adc	r25, r25
 672:	61 f0       	breq	.+24     	; 0x68c <__fp_splitA+0x20>
 674:	9f 3f       	cpi	r25, 0xFF	; 255
 676:	79 f0       	breq	.+30     	; 0x696 <__fp_splitA+0x2a>
 678:	87 95       	ror	r24
 67a:	08 95       	ret
 67c:	12 16       	cp	r1, r18
 67e:	13 06       	cpc	r1, r19
 680:	14 06       	cpc	r1, r20
 682:	55 1f       	adc	r21, r21
 684:	f2 cf       	rjmp	.-28     	; 0x66a <__fp_split3+0xe>
 686:	46 95       	lsr	r20
 688:	f1 df       	rcall	.-30     	; 0x66c <__fp_splitA>
 68a:	08 c0       	rjmp	.+16     	; 0x69c <__fp_splitA+0x30>
 68c:	16 16       	cp	r1, r22
 68e:	17 06       	cpc	r1, r23
 690:	18 06       	cpc	r1, r24
 692:	99 1f       	adc	r25, r25
 694:	f1 cf       	rjmp	.-30     	; 0x678 <__fp_splitA+0xc>
 696:	86 95       	lsr	r24
 698:	71 05       	cpc	r23, r1
 69a:	61 05       	cpc	r22, r1
 69c:	08 94       	sec
 69e:	08 95       	ret

000006a0 <__fp_zero>:
 6a0:	e8 94       	clt

000006a2 <__fp_szero>:
 6a2:	bb 27       	eor	r27, r27
 6a4:	66 27       	eor	r22, r22
 6a6:	77 27       	eor	r23, r23
 6a8:	cb 01       	movw	r24, r22
 6aa:	97 f9       	bld	r25, 7
 6ac:	08 95       	ret

000006ae <__gesf2>:
 6ae:	8a df       	rcall	.-236    	; 0x5c4 <__fp_cmp>
 6b0:	08 f4       	brcc	.+2      	; 0x6b4 <__gesf2+0x6>
 6b2:	8f ef       	ldi	r24, 0xFF	; 255
 6b4:	08 95       	ret

000006b6 <__mulsf3>:
 6b6:	0b d0       	rcall	.+22     	; 0x6ce <__mulsf3x>
 6b8:	c0 cf       	rjmp	.-128    	; 0x63a <__fp_round>
 6ba:	b1 df       	rcall	.-158    	; 0x61e <__fp_pscA>
 6bc:	28 f0       	brcs	.+10     	; 0x6c8 <__mulsf3+0x12>
 6be:	b6 df       	rcall	.-148    	; 0x62c <__fp_pscB>
 6c0:	18 f0       	brcs	.+6      	; 0x6c8 <__mulsf3+0x12>
 6c2:	95 23       	and	r25, r21
 6c4:	09 f0       	breq	.+2      	; 0x6c8 <__mulsf3+0x12>
 6c6:	a2 cf       	rjmp	.-188    	; 0x60c <__fp_inf>
 6c8:	a7 cf       	rjmp	.-178    	; 0x618 <__fp_nan>
 6ca:	11 24       	eor	r1, r1
 6cc:	ea cf       	rjmp	.-44     	; 0x6a2 <__fp_szero>

000006ce <__mulsf3x>:
 6ce:	c6 df       	rcall	.-116    	; 0x65c <__fp_split3>
 6d0:	a0 f3       	brcs	.-24     	; 0x6ba <__mulsf3+0x4>

000006d2 <__mulsf3_pse>:
 6d2:	95 9f       	mul	r25, r21
 6d4:	d1 f3       	breq	.-12     	; 0x6ca <__mulsf3+0x14>
 6d6:	95 0f       	add	r25, r21
 6d8:	50 e0       	ldi	r21, 0x00	; 0
 6da:	55 1f       	adc	r21, r21
 6dc:	62 9f       	mul	r22, r18
 6de:	f0 01       	movw	r30, r0
 6e0:	72 9f       	mul	r23, r18
 6e2:	bb 27       	eor	r27, r27
 6e4:	f0 0d       	add	r31, r0
 6e6:	b1 1d       	adc	r27, r1
 6e8:	63 9f       	mul	r22, r19
 6ea:	aa 27       	eor	r26, r26
 6ec:	f0 0d       	add	r31, r0
 6ee:	b1 1d       	adc	r27, r1
 6f0:	aa 1f       	adc	r26, r26
 6f2:	64 9f       	mul	r22, r20
 6f4:	66 27       	eor	r22, r22
 6f6:	b0 0d       	add	r27, r0
 6f8:	a1 1d       	adc	r26, r1
 6fa:	66 1f       	adc	r22, r22
 6fc:	82 9f       	mul	r24, r18
 6fe:	22 27       	eor	r18, r18
 700:	b0 0d       	add	r27, r0
 702:	a1 1d       	adc	r26, r1
 704:	62 1f       	adc	r22, r18
 706:	73 9f       	mul	r23, r19
 708:	b0 0d       	add	r27, r0
 70a:	a1 1d       	adc	r26, r1
 70c:	62 1f       	adc	r22, r18
 70e:	83 9f       	mul	r24, r19
 710:	a0 0d       	add	r26, r0
 712:	61 1d       	adc	r22, r1
 714:	22 1f       	adc	r18, r18
 716:	74 9f       	mul	r23, r20
 718:	33 27       	eor	r19, r19
 71a:	a0 0d       	add	r26, r0
 71c:	61 1d       	adc	r22, r1
 71e:	23 1f       	adc	r18, r19
 720:	84 9f       	mul	r24, r20
 722:	60 0d       	add	r22, r0
 724:	21 1d       	adc	r18, r1
 726:	82 2f       	mov	r24, r18
 728:	76 2f       	mov	r23, r22
 72a:	6a 2f       	mov	r22, r26
 72c:	11 24       	eor	r1, r1
 72e:	9f 57       	subi	r25, 0x7F	; 127
 730:	50 40       	sbci	r21, 0x00	; 0
 732:	8a f0       	brmi	.+34     	; 0x756 <__mulsf3_pse+0x84>
 734:	e1 f0       	breq	.+56     	; 0x76e <__mulsf3_pse+0x9c>
 736:	88 23       	and	r24, r24
 738:	4a f0       	brmi	.+18     	; 0x74c <__mulsf3_pse+0x7a>
 73a:	ee 0f       	add	r30, r30
 73c:	ff 1f       	adc	r31, r31
 73e:	bb 1f       	adc	r27, r27
 740:	66 1f       	adc	r22, r22
 742:	77 1f       	adc	r23, r23
 744:	88 1f       	adc	r24, r24
 746:	91 50       	subi	r25, 0x01	; 1
 748:	50 40       	sbci	r21, 0x00	; 0
 74a:	a9 f7       	brne	.-22     	; 0x736 <__mulsf3_pse+0x64>
 74c:	9e 3f       	cpi	r25, 0xFE	; 254
 74e:	51 05       	cpc	r21, r1
 750:	70 f0       	brcs	.+28     	; 0x76e <__mulsf3_pse+0x9c>
 752:	5c cf       	rjmp	.-328    	; 0x60c <__fp_inf>
 754:	a6 cf       	rjmp	.-180    	; 0x6a2 <__fp_szero>
 756:	5f 3f       	cpi	r21, 0xFF	; 255
 758:	ec f3       	brlt	.-6      	; 0x754 <__mulsf3_pse+0x82>
 75a:	98 3e       	cpi	r25, 0xE8	; 232
 75c:	dc f3       	brlt	.-10     	; 0x754 <__mulsf3_pse+0x82>
 75e:	86 95       	lsr	r24
 760:	77 95       	ror	r23
 762:	67 95       	ror	r22
 764:	b7 95       	ror	r27
 766:	f7 95       	ror	r31
 768:	e7 95       	ror	r30
 76a:	9f 5f       	subi	r25, 0xFF	; 255
 76c:	c1 f7       	brne	.-16     	; 0x75e <__mulsf3_pse+0x8c>
 76e:	fe 2b       	or	r31, r30
 770:	88 0f       	add	r24, r24
 772:	91 1d       	adc	r25, r1
 774:	96 95       	lsr	r25
 776:	87 95       	ror	r24
 778:	97 f9       	bld	r25, 7
 77a:	08 95       	ret

0000077c <_exit>:
 77c:	f8 94       	cli

0000077e <__stop_program>:
 77e:	ff cf       	rjmp	.-2      	; 0x77e <__stop_program>
